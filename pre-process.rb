#!/usr/bin/env ruby

# This script processes files generated by org-mode and does some
# transformations to make them acceptable for Jekyll.

require "rubygems"
require "hpricot"

def process(post)
  # Check if the post already has been processed (look for YAML header)
  return nil if post[0..2] == '---'

  # Strip off everything outside the main div & extract categories
  doc = Hpricot(post)
  cats = (doc/'span.tag').remove
  cats = (cats/'span').map(&:inner_html).map(&:downcase)

  # extract h2 title
  h2 = (doc/'h2#sec-1').remove
  post = doc.search('div#outline-container-1').inner_html

  # Extract metadata and insert yaml
  meta = {}
  meta['layout'] = 'post'
  meta['title'] = h2.inner_html.gsub('&nbsp;', '').strip # insert h2 title
  meta['categories'] = cats unless cats.empty?

  meta = meta.to_yaml + "---\n\n"
  post = meta + post

  post
end

['./jekyll-root/_posts/*.html', './jekyll-root/pages/*.html'].each do |glob|
  Dir.glob(glob).each do |f|
    file = File.open(f, "r")
    post = process(file.read)
    File.open(f, "w").write(post) if post
  end
end
